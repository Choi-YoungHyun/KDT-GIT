🟢Git Repository Fork 기능 
- 버전별로 저장 가능한 거대한 저장소(Repository)

- Fork는 다른 계정(네임스페이스)로 복사하는 기능
- Git의 명령어가 아니다.
- 타인의 깃허브 계정의 Repository에서 fork(우측상단)을 눌러 내 계정 repository로 복사

✔ 다른 사람과 협업하기
원하는 Repository에서 settings -> collaborators -> Add people -> 추가할 사용자의 이메일,네임 입력시 같이 작업 가능 

✔ Repository 삭제
- 원하는 Repository에서 settings -> general (하단으로 쭉 내림) ->
Delete this repository



🟢Git Repository Clone 기능
- Repository를 로컬 시스템에 복제하는 방법
- 지금까지의 모든 Repository의 history가 포함
    [사용법]
    git clone {git주소} (폴더를 생성해준다)
    git clone {git주소} . (폴더를 생성해주지 않는다)


    Clone
    Repository -> clone -> 내 컴퓨터의 저장

    Fork
    타인 Repository -> Fork -> 나의 Repository -> Clone



🔴Github Desktop 다운로드
- https://desktop.github.com/ 
- vscode 안의 터미널을 이용하려고 많이 사용


🟢Branch
- 작업에 대한 나무가지
- 큰 줄기에 영향을 주지 않고 가지에서만 작업을 할 수 있음
- Git에서 저장소의 기록에서 특정 커밋에 대한 포인터
- 각 브랜치는 자체 커밋 및 변ㄱ경 세트를 가질 수 있음
- 브랜치를 사용하여 저장소의 메인 분기에 영향을 미치지 않고 여러 기능이나 버그 수정을 동시에 수행할 수 있음


✔Pull-Request
-당기기를 요청?
(다른 작업자가 Push를 하면 해당 자료를 pull 할지 말지 정하는 것)
-PR은 저장소에 대한 변경 사항을 제안하고 다른 개발자와 협업하는 방법
-PR은 일반적으로 소프트웨어 개발에서 코드 변경을 제안하고 검토하며 저장소의 브랜츠를 병합하는데 사용


    1. PR만들기
        * 새로운 브랜치를 만들고 코드를 수정
        * 원격 저장소에 해당 브랜치를 Push
    
    2. PR리뷰
        * 함께 작업하는 작업자가 해당 PR을 리뷰함
        * 문제가 될만한 부분이 없는지 체크

    3. PR-Merge
        * 브랜치는 새로운 분기가 생기는 것이므로 PR-Merge를 통해 다시 병함

        * 병합 후 더이상 필요없는 브랜치는 삭제할 수 있다.    

    4. PR-Close
        * 문제가 있거나, 중복된 경우, 더 이상 필요없는 PR은 닫을 수 있다.

        * PR을 열어둔 상태에서 기존 Branch에 Commit하면 PR에도 모두 반영

브랜치 변경

    git checkout -b 브랜치명



    순서 
    옮길 파일경로로  cmd 이동
    git init 
    git add .
    git commit -m "p태그에 branch 생성 완료."
    git push --set-upstream origin 'apple'

    github 접속



✔ .gitignore
프로젝트에 원하지 않은 백업 파일이나 로그파일 또는 보안상 깃허브에 올리고 싶지 않은 파일들을 제외시킬 수 있는 설정 파일

https://www.toptal.com/developers/gitignore



